{"version":3,"sources":["Plot.module.css","Canvas.module.css","App.module.css","ClickDrag.module.css","MathFunctions.js","Canvas.jsx","ClickDrag.jsx","Render.js","MakeGrid.js","Plot.jsx","FunctionInput.jsx","Input2DFunction.jsx","App.jsx","index.js"],"names":["module","exports","Plot","Buttons","Canvas","BackgroundCanvas","canvas","App","ClickDrag","linspace","start","end","num","empty_array","Array","fill","dx","map","_","idx","returnCircle","r","Math","PI","t","x","cos","y","sin","props","canvasRef","React","useRef","useEffect","draw","react_default","a","createElement","className","styles","ref","width","height","style","onMouseDown","event","handleMouseDown","value","drawPath","path","zoom","line_prop","canvas_path","ctx","current","getContext","canvas_width","canvas_height","canvas_unit_per_unit","min","point","pointToCanvasPoint","pathToCanvasPath","pt","zoomPath","line_props","beginPath","forEach","lineTo","_i","_Object$entries","Object","entries","length","_ref3","_ref2","slicedToArray","key","stroke","closePath","drawCanvasPath","renderCanvas","paths","clearRect","clearScreen","i","calcTicks","grid_spacing","n_ticks_per_half","n_ticks_per_unit","n_units_per_half","ceil","calcNTicksPerHalf","unscaled_ticks","tick_scale","tick","drawGrid","gridline_prop","grid_paths","ticks","x_paths","x_val","y_paths","y_val","concat","createGridlinePaths","num_paths","gridline_props","min_zoom","min_scale","strokeStyle","lineWidth","_React$useState","useState","_React$useState2","last_zoom","setLastZoom","_React$useState3","_React$useState4","setZoom","_React$useState5","_React$useState6","zoom_clicked","setZoomClicked","_React$useState7","_React$useState8","zoom_initial_point","setZoomInitialPoint","_React$useState9","_React$useState10","last_scale","setLastScale","_React$useState11","_React$useState12","scale","setScale","_React$useState13","_React$useState14","scale_clicked","setScaleClicked","_React$useState15","_React$useState16","scale_initial_point","setScaleInitialPoint","new_zoom","mouse_pos","new_scale","onScaleChange","mouse_clicked","src_ClickDrag","Number","toFixed","toExponential","src_Canvas","FunctionInput","_ref","onEnter","type","onKeyDown","keyCode","Input2DFunction","handleXTextboxEnter","handleYTextboxEnter","x_textbox_value","y_textbox_value","src_FunctionInput","plot_1_val","setPlot1Val","plot_2_val","setPlot2Val","setMousePos","setMouseClicked","setXTextboxValue","setYTextboxValue","pts","func_pts","x_expr","y_expr","x_func","compile","y_func","evaluate","getFuncExpression","new_pts","onMouseUp","onMouseMove","pageX","pageY","src_Input2DFunction","target","lib","parse","toTex","src_Plot","slider_value","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,QAAA,sBAAAC,OAAA,qBAAAC,iBAAA,oDCAlBL,EAAAC,QAAA,CAAkBK,OAAA,uBAAAF,OAAA,4CCAlBJ,EAAAC,QAAA,CAAkBM,IAAA,sCCAlBP,EAAAC,QAAA,CAAkBO,UAAA,sNCmDX,SAASC,EAASC,EAAOC,EAAKC,GACnC,IAAMC,EAAcC,MAAMF,GAAKG,KAAK,MAC9BC,GAAML,EAAMD,IAAUE,EAAM,GAClC,OAAOC,EAAYI,IAAK,SAACC,EAAGC,GAC1B,OAAOT,EAAQM,EAAGG,IAMf,SAASC,EAAaC,GAG3B,OAFUZ,EAAS,EAAG,EAAEa,KAAKC,GAAI,KAExBN,IAAI,SAACO,GACZ,MAAQ,CAAEC,EAAGJ,EAAEC,KAAKI,IAAIF,GACdG,EAAGN,EAAEC,KAAKM,IAAIJ,6DC5CbpB,MApBf,SAAgByB,GAEd,IAAMC,EAAYC,IAAMC,OAAO,MAM/B,OAJAD,IAAME,UAAU,WACdJ,EAAMK,KAAKJ,IACV,CAACD,EAAMK,OAGRC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnC,QACrB+B,EAAAC,EAAAC,cAAA,UACEG,IAAKV,EACLW,MAAM,OACNC,OAAO,OACPJ,UAAWC,IAAOjC,4BCEXE,MAhBf,SAAmBqB,GAMjB,OACEM,EAAAC,EAAAC,cAAA,OACEC,UAAWK,IAAMnC,UACjBoC,YAAa,SAACC,GAAD,OAPjB,SAAyBA,GACvBhB,EAAMe,YAAYC,GAMQC,CAAgBD,KAErChB,EAAMkB,QCsDf,SAASC,EAASlB,EAAWmB,EAAMC,EAAMC,GAEvC,IACMC,EAxCR,SAA0BtB,EAAWmB,GAEnC,IAAMI,EAAMvB,EAAUwB,QAAQC,WAAW,MACnCC,EAAeH,EAAI/C,OAAOmC,MAC1BgB,EAAgBJ,EAAI/C,OAAOoC,OAE3BgB,EAAuBpC,KAAKqC,IAAIH,EAAcC,GAAiB,EASrE,OAPoBR,EAAKhC,IAAI,SAAC2C,GAC5B,OAnBJ,SAA4BA,EAAOF,EAAsBjB,EAAOC,GAE9D,MAAQ,CACNjB,EAAKmC,EAAMnC,EAAIiC,EAAyBjB,EAAQ,EAChDd,GAAMiC,EAAMjC,EAAI+B,EAAyBhB,EAAS,GAezCmB,CAAmBD,EACAF,EACAF,EACAC,KA4BVK,CAAiBhC,EA3DvC,SAAkBmB,EAAMC,GACtB,OAASD,EAAKhC,IAAI,SAAC8C,GACjB,MAAQ,CAAEtC,EAAIsC,EAAGtC,EAAIyB,EACXvB,EAAIoC,EAAGpC,EAAIuB,KAuDHc,CAASf,EAAMC,KAnBrC,SAAwBpB,EAAWsB,EAAaa,GAE9C,IAAMZ,EAAMvB,EAAUwB,QAAQC,WAAW,MACzCF,EAAIa,YACJd,EAAYe,QAAQ,SAACJ,GACnBV,EAAIe,OAAOL,EAAGtC,EAAGsC,EAAGpC,KAGtB,QAAA0C,EAAA,EAAAC,EAAyBC,OAAOC,QAAQP,GAAxCI,EAAAC,EAAAG,OAAAJ,IAAqD,KAAAK,EAAAJ,EAAAD,GAAAM,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAA3CG,EAA2CF,EAAA,GAAtC5B,EAAsC4B,EAAA,GACnDtB,EAAIwB,GAAO9B,EAEbM,EAAIyB,SACJzB,EAAI0B,YASJC,CAAelD,EAAWsB,EAAaD,GAKlC,SAAS8B,EAAanD,EAAWoD,EAAOhC,EAAMe,IA7ErD,SAAqBnC,GACnB,IAAMuB,EAAMvB,EAAUwB,QAAQC,WAAW,MAEnCd,EAAQY,EAAI/C,OAAOmC,MACnBC,EAASW,EAAI/C,OAAOoC,OAC1BW,EAAI8B,UAAU,EAAG,EAAG1C,EAAOC,GAC3BW,EAAIa,YACJb,EAAI0B,YAwEJK,CAAYtD,GACZoD,EAAMf,QAAQ,SAAClB,EAAMoC,GAAQrC,EAASlB,EAAWmB,EAAMC,EAAMe,EAAWoB,MChE1E,SAASC,EAAUC,EAAcrC,GAE/B,IAAMsC,EAbR,SAA2BD,EAAcrC,GAEvC,IAAMuC,EAAmB,EAAIF,EACvBG,EAAmB,EAAIxC,EAG7B,OAFyB5B,KAAKqE,KAAMF,EAAmBC,GAS9BE,CAAkBL,EAAcrC,GACnD2C,EAAiBpF,GAAU+E,EACDA,EACA,EAAEA,EAAmB,GAC/CM,EAAaP,EAGnB,OAFqBM,EAAe5E,IAAI,SAAC8E,GAAD,OAAUA,EAAKD,IAwBlD,SAASE,EAASlE,EAAWoB,EAAM+C,GAExC,IAAMC,EAnBR,SAA6BX,EAAcrC,GAEzC,IAAMiD,EAAQb,EAAUC,EAAcrC,GAEhCvC,EAAMwF,EAAM1B,OAAS,EACrB2B,EAAUD,EAAMlF,IAAI,SAACoF,GACzB,MAAO,CAAC,CAAC5E,EAAG4E,EAAO1E,EAAGwE,EAAM,IAAK,CAAC1E,EAAG4E,EAAO1E,EAAGwE,EAAMxF,OAEjD2F,EAAUH,EAAMlF,IAAI,SAACsF,GACzB,MAAO,CAAC,CAAC9E,EAAG0E,EAAM,GAAIxE,EAAG4E,GAAQ,CAAC9E,EAAG0E,EAAMxF,GAAMgB,EAAG4E,MAGtD,OAAOH,EAAQI,OAAOF,GAOHG,CAAoB,GAAKvD,GAEtCwD,EAAYR,EAAWzB,OACzBkC,EAAiB7F,MAAM4F,GAC3BC,EAAe5F,KAAKkF,GAEpBhB,EAAanD,EAAWoE,EAAYhD,EAAMyD,GC0C7BzG,MA1Ff,SAAc2B,GAEZ,IAAM+E,EAAW,IACXC,EAAY,EAEZZ,EAAgB,CAACa,YAAa,UAAWC,UAAW,GALvCC,EAScjF,IAAMkF,SAAS,GAT7BC,EAAA3C,OAAAK,EAAA,EAAAL,CAAAyC,EAAA,GASZG,EATYD,EAAA,GASDE,EATCF,EAAA,GAAAG,EAUKtF,IAAMkF,SAAS,GAVpBK,EAAA/C,OAAAK,EAAA,EAAAL,CAAA8C,EAAA,GAUZnE,EAVYoE,EAAA,GAUNC,EAVMD,EAAA,GAAAE,EAWoBzF,IAAMkF,UAAS,GAXnCQ,EAAAlD,OAAAK,EAAA,EAAAL,CAAAiD,EAAA,GAWZE,EAXYD,EAAA,GAWEE,EAXFF,EAAA,GAAAG,EAY+B7F,IAAMkF,SAAS,CAACxF,EAAG,EAAGE,EAAG,IAZxDkG,EAAAtD,OAAAK,EAAA,EAAAL,CAAAqD,EAAA,GAYZE,EAZYD,EAAA,GAYQE,EAZRF,EAAA,GAAAG,EAcgBjG,IAAMkF,SAAS,GAd/BgB,EAAA1D,OAAAK,EAAA,EAAAL,CAAAyD,EAAA,GAcZE,EAdYD,EAAA,GAcAE,EAdAF,EAAA,GAAAG,EAeOrG,IAAMkF,SAAS,GAftBoB,EAAA9D,OAAAK,EAAA,EAAAL,CAAA6D,EAAA,GAeZE,EAfYD,EAAA,GAeLE,EAfKF,EAAA,GAAAG,EAgBsBzG,IAAMkF,UAAS,GAhBrCwB,EAAAlE,OAAAK,EAAA,EAAAL,CAAAiE,EAAA,GAgBZE,EAhBYD,EAAA,GAgBGE,EAhBHF,EAAA,GAAAG,EAiBiC7G,IAAMkF,SAAS,CAACxF,EAAG,EAAGE,EAAG,IAjB1DkH,EAAAtE,OAAAK,EAAA,EAAAL,CAAAqE,EAAA,GAiBZE,EAjBYD,EAAA,GAiBSE,EAjBTF,EAAA,GAgEnB,OALA9G,IAAME,UAhCN,WAEE,GAAIyF,EAAc,CAChB,IAAMsB,EAAW7B,GACRtF,EAAMoH,UAAUxH,EAAIqG,EAAmBrG,GAAK,IACjDuH,EAAWpC,GACbW,EAAQyB,GAIZ,GAAIN,EAAe,CACjB,IAAMQ,EAAYhB,GACTrG,EAAMoH,UAAUxH,EAAIqH,EAAoBrH,GAAK,IAClDyH,EAAYrC,IACd0B,EAASW,GACTrH,EAAMsH,cAAcb,MAiBY,CAACzG,EAAMoH,YAC7ClH,IAAME,UAzCN,WACMJ,EAAMuH,gBAGVzB,GAAe,GACfgB,GAAgB,KAoCkB,CAAC9G,EAAMuH,gBAKzCjH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrC,MACrBiC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpC,SACrBgC,EAAAC,EAAAC,cAACgH,EAAD,CACEzG,YArBR,SAA6BC,GAC3B8E,GAAe,GACfI,EAAoBlG,EAAMoH,WAC1B7B,EAAYlE,IAmBNH,MAAK,SAAAyD,OAAW8C,OAAY,IAALpG,GAAUqG,QAAQ,GAApC,OAEPpH,EAAAC,EAAAC,cAACgH,EAAD,CACEzG,YAnBR,SAA8BC,GAC5B8F,GAAgB,GAChBI,EAAqBlH,EAAMoH,WAC3Bd,EAAaG,IAiBPvF,MAAK,UAAAyD,OAAY8C,OAAOhB,GAAOkB,cAAc,OAGjDrH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnC,QACrB+B,EAAAC,EAAAC,cAACoH,EAAD,CACEvH,KAAM,SAACJ,GAAD,OAAemD,EAAanD,EAAWD,EAAMqD,MAAOhC,EAAMrB,EAAMoC,gBAG1E9B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlC,kBACrB8B,EAAAC,EAAAC,cAACoH,EAAD,CACEvH,KAAM,SAACJ,GAAekE,EAASlE,EAAWoB,EAAM+C,SCnE3CyD,MArBf,SAAAC,GAA2C,IAAlBC,EAAkBD,EAAlBC,QAAS7G,EAAS4G,EAAT5G,MAQhC,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEwH,KAAK,OACLC,UAVN,SAAkBjH,GACM,KAAlBA,EAAMkH,SACRH,EAAQ/G,MAURV,EAAAC,EAAAC,cAAA,SACGU,KCKMiH,MAnBf,SAAAL,GAG8C,IAHnBM,EAGmBN,EAHnBM,oBACAC,EAEmBP,EAFnBO,oBACAC,EACmBR,EADnBQ,gBACAC,EAAmBT,EAAnBS,gBAEzB,OACEjI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgI,EAAD,CACET,QAASK,EACTlH,MAAOoH,IAEThI,EAAAC,EAAAC,cAACgI,EAAD,CACET,QAASM,EACTnH,MAAOqH,MC2EA7J,MAhFf,WAAe,IAAAyG,EAEqBjF,IAAMkF,SAAS,GAFpCC,EAAA3C,OAAAK,EAAA,EAAAL,CAAAyC,EAAA,GAENsD,EAFMpD,EAAA,GAEMqD,EAFNrD,EAAA,GAAAG,EAGqBtF,IAAMkF,SAAS,GAHpCK,EAAA/C,OAAAK,EAAA,EAAAL,CAAA8C,EAAA,GAGNmD,EAHMlD,EAAA,GAGMmD,EAHNnD,EAAA,GAAAE,EAMoBzF,IAAMkF,SAAS,CAACxF,EAAG,EAAGE,EAAG,IAN7C8F,EAAAlD,OAAAK,EAAA,EAAAL,CAAAiD,EAAA,GAMNyB,EANMxB,EAAA,GAMKiD,EANLjD,EAAA,GAAAG,EAO4B7F,IAAMkF,UAAS,GAP3CY,EAAAtD,OAAAK,EAAA,EAAAL,CAAAqD,EAAA,GAONwB,EAPMvB,EAAA,GAOS8C,EAPT9C,EAAA,GAAAG,EAmB+BjG,IAAMkF,SAAS,GAnB9CgB,EAAA1D,OAAAK,EAAA,EAAAL,CAAAyD,EAAA,GAmBNmC,EAnBMlC,EAAA,GAmBW2C,EAnBX3C,EAAA,GAAAG,EAoB+BrG,IAAMkF,SAAS,GApB9CoB,EAAA9D,OAAAK,EAAA,EAAAL,CAAA6D,EAAA,GAoBNgC,EApBM/B,EAAA,GAoBWwC,EApBXxC,EAAA,GAyCPyC,EAAM1J,EAAakJ,GACnBS,EAAWD,EAAI7J,IAfrB,SAA2B+J,EAAQC,GAEjC,IAAMC,EAASC,YAAQH,GACjBI,EAASD,YAAQF,GAQvB,OAPa,SAAClH,GACZ,MAAQ,CACNtC,EAAGyJ,EAAOG,SAAStH,GACnBpC,EAAGyJ,EAAOC,SAAStH,KAQAuH,CAAkBnB,EAAiBC,IACtDmB,EAAUnK,EAAakJ,EAAWE,GAClCvG,EAAa,CAAC,CAAC6C,YAAa,UAAWC,UAAW,GACpC,CAACD,YAAa,UAAWC,UAAW,IAExD,OACE5E,EAAAC,EAAAC,cAAA,OACEC,UAAWK,IAAMpC,IACjBqC,YApCJ,SAAyBC,GACvB8H,GAAgB,IAoCda,UAxCJ,SAAuB3I,GACrB8H,GAAgB,IAwCdc,YA5CJ,SAAyB5I,GACvB6H,EAAY,CAACjJ,EAAGoB,EAAM6I,MAAO/J,EAAGkB,EAAM8I,UA6CpCxJ,EAAAC,EAAAC,cAACuJ,EAAD,CACE3B,oBAlCN,SAA6BpH,GAC3B+H,EAAiB/H,EAAMgJ,OAAO9I,QAkC1BmH,oBAhCN,SAA6BrH,GAC3BgI,EAAiBhI,EAAMgJ,OAAO9I,QAgC1BoH,gBAAiBhI,EAAAC,EAAAC,cAACyJ,EAAA,KAAD,KAAOC,YAAM5B,GAAiB6B,SAC/C5B,gBAAiBjI,EAAAC,EAAAC,cAACyJ,EAAA,KAAD,KAAOC,YAAM3B,GAAiB4B,WAEjD7J,EAAAC,EAAAC,cAAC4J,EAAD,CACEC,aAAc5B,EACdnB,cAAe,SAACb,GAAD,OAAWiC,EAAYjC,IACtCpD,MAAO,CAAC4F,GACR7G,WAAYA,EACZmF,cAAeA,EACfH,UAAWA,IAEb9G,EAAAC,EAAAC,cAAC4J,EAAD,CACEC,aAAc1B,EACdrB,cAAe,SAACb,GAAD,OAAWmC,EAAYnC,IACtCpD,MAAO,CAAC6F,EAAUQ,GAClBtH,WAAYA,EACZmF,cAAeA,EACfH,UAAWA,MChFnBkD,IAASC,OACPjK,EAAAC,EAAAC,cAACF,EAAAC,EAAMiK,WAAP,KACElK,EAAAC,EAAAC,cAACiK,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.90a15b8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Plot\":\"Plot_Plot__1KTAS\",\"Buttons\":\"Plot_Buttons__KMdqr\",\"Canvas\":\"Plot_Canvas__3R-0c\",\"BackgroundCanvas\":\"Plot_BackgroundCanvas__1_t0V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1vaUu\",\"Canvas\":\"Canvas_Canvas__33MS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__22zXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClickDrag\":\"ClickDrag_ClickDrag__1_Q3u\"};","\nexport function drawCircle(canvasRef, radius) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#FF00FF';\n  ctx.arc(ctr_x, ctr_y, radius, 0, 2*Math.PI);\n  ctx.stroke();\n}\n\n\n\nexport function drawCurve(canvasRef, pts) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  pts.forEach((pt) => {\n    ctx.lineTo(pt.x + ctr_x, pt.y + ctr_y);\n  });\n\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#0000FF';\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nexport function transformFunc(pt) {\n  let t = Math.atan2(pt.y, pt.x);\n  const r0 = Math.sqrt(pt.x*pt.x + pt.y*pt.y);\n  const r = 0.1*r0*Math.cos(10*t) + r0;\n  t += 2*r0;\n  return ({\n    x : r*Math.cos(t),\n    y : r*Math.sin(t)\n  });\n}\n\n\n\nexport function linspace(start, end, num) {\n  const empty_array = Array(num).fill(null);\n  const dx = (end - start) / (num - 1);\n  return empty_array.map( (_, idx) => {\n    return start + dx*idx;\n  });\n}\n\n\n\nexport function returnCircle(r) {\n  const t = linspace(0, 2*Math.PI, 200);\n\n  return t.map((t) => {\n    return ({ x: r*Math.cos(t),\n              y: r*Math.sin(t) });\n  });\n}\n","import React from 'react';\nimport styles from './Canvas.module.css';\n\nfunction Canvas(props) {\n\n  const canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    props.draw(canvasRef);\n  }, [props.draw]);\n\n  return (\n    <div className={styles.Canvas}>\n      <canvas\n        ref={canvasRef}\n        width=\"1000\"\n        height=\"1000\"\n        className={styles.canvas}\n      />\n    </div>\n  );\n}\n\nexport default Canvas\n","import React from 'react';\nimport style from './ClickDrag.module.css';\n\nfunction ClickDrag(props) {\n\n  function handleMouseDown(event) {\n    props.onMouseDown(event)\n  }\n\n  return (\n    <div\n      className={style.ClickDrag}\n      onMouseDown={(event) => handleMouseDown(event)}\n    >\n        {props.value}\n    </div>\n  );\n}\n\nexport default ClickDrag;\n","function clearScreen(canvasRef) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  ctx.clearRect(0, 0, width, height);\n  ctx.beginPath();\n  ctx.closePath();\n}\n\n\n\nfunction zoomPath(path, zoom) {\n  return ( path.map((pt) => {\n    return ({ x : pt.x * zoom,\n              y : pt.y * zoom });\n  }));\n}\n\n\n\nfunction pointToCanvasPoint(point, canvas_unit_per_unit, width, height) {\n\n  return ({\n    x : (point.x * canvas_unit_per_unit) + (width / 2),\n    y : -(point.y * canvas_unit_per_unit) + (height / 2)\n  });\n}\n\n\n\nfunction pathToCanvasPath(canvasRef, path) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  const canvas_width = ctx.canvas.width;\n  const canvas_height = ctx.canvas.height;\n  // divided by 2 because a unit is *half* the screen width\n  const canvas_unit_per_unit = Math.min(canvas_width, canvas_height) / 2;\n\n  const canvas_path = path.map((point) => {\n    return ( pointToCanvasPoint(point,\n                                canvas_unit_per_unit,\n                                canvas_width,\n                                canvas_height) );\n  });\n\n  return canvas_path;\n}\n\n\n\nfunction drawCanvasPath(canvasRef, canvas_path, line_props) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  ctx.beginPath();\n  canvas_path.forEach((pt) => {\n    ctx.lineTo(pt.x, pt.y);\n  });\n\n  for (let [key, value] of Object.entries(line_props)) {\n    ctx[key] = value;\n  }\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nfunction drawPath(canvasRef, path, zoom, line_prop) {\n\n  const zoomed_path = zoomPath(path, zoom);\n  const canvas_path = pathToCanvasPath(canvasRef, zoomed_path);\n  drawCanvasPath(canvasRef, canvas_path, line_prop);\n}\n\n\n\nexport function renderCanvas(canvasRef, paths, zoom, line_props) {\n\n  clearScreen(canvasRef);\n  paths.forEach((path, i) => { drawPath(canvasRef, path, zoom, line_props[i]); });\n}\n","import { linspace } from './MathFunctions.js';\nimport { renderCanvas } from './Render.js';\n\n\n\nfunction calcNTicksPerHalf(grid_spacing, zoom) {\n\n  const n_ticks_per_unit = 1 / grid_spacing;\n  const n_units_per_half = 1 / zoom; // screen goes from (-1, 1) by default\n  const n_ticks_per_half = Math.ceil( n_ticks_per_unit * n_units_per_half );\n\n  return n_ticks_per_half;\n}\n\n\n\nfunction calcTicks(grid_spacing, zoom) {\n\n  const n_ticks_per_half = calcNTicksPerHalf(grid_spacing, zoom);\n  const unscaled_ticks = linspace(-n_ticks_per_half,\n                                  n_ticks_per_half,\n                                  2*n_ticks_per_half + 1); // +1 for axis line\n  const tick_scale = grid_spacing;\n  const scaled_ticks = unscaled_ticks.map((tick) => tick*tick_scale);\n\n  return scaled_ticks;\n}\n\n\n\nfunction createGridlinePaths(grid_spacing, zoom) {\n\n  const ticks = calcTicks(grid_spacing, zoom);\n\n  const end = ticks.length - 1;\n  const x_paths = ticks.map((x_val) => {\n    return [{x: x_val, y: ticks[0]}, {x: x_val, y: ticks[end]}];\n  });\n  const y_paths = ticks.map((y_val) => {\n    return [{x: ticks[0], y: y_val}, {x: ticks[end], y: y_val}];\n  });\n\n  return x_paths.concat(y_paths);\n}\n\n\n\nexport function drawGrid(canvasRef, zoom, gridline_prop) {\n\n  const grid_paths = createGridlinePaths(0.2, zoom);\n\n  const num_paths = grid_paths.length;\n  let gridline_props = Array(num_paths);\n  gridline_props.fill(gridline_prop);\n\n  renderCanvas(canvasRef, grid_paths, zoom, gridline_props);\n}\n","import React from 'react';\nimport styles from './Plot.module.css';\nimport Canvas from './Canvas';\nimport ClickDrag from './ClickDrag';\nimport { renderCanvas } from './Render';\nimport { drawGrid } from './MakeGrid';\n\nfunction Plot(props) {\n\n  const min_zoom = 0.01;\n  const min_scale = 0;\n\n  const gridline_prop = {strokeStyle: \"#000000\", lineWidth: 1};\n\n\n  // Handle ClickDrags\n  const [last_zoom, setLastZoom] = React.useState(1);\n  const [zoom, setZoom] = React.useState(1);\n  const [zoom_clicked, setZoomClicked] = React.useState(false);\n  const [zoom_initial_point, setZoomInitialPoint] = React.useState({x: 0, y: 0});\n\n  const [last_scale, setLastScale] = React.useState(1);\n  const [scale, setScale] = React.useState(1);\n  const [scale_clicked, setScaleClicked] = React.useState(false);\n  const [scale_initial_point, setScaleInitialPoint] = React.useState({x: 0, y: 0});\n\n  function handleMouseUnclick() {\n    if (props.mouse_clicked) {\n      return;\n    }\n    setZoomClicked(false);\n    setScaleClicked(false);\n  }\n\n  function handleMousePosChange() {\n\n    if (zoom_clicked) {\n      const new_zoom = last_zoom\n            + (props.mouse_pos.x - zoom_initial_point.x) / 100;\n      if (new_zoom > min_zoom) {\n        setZoom(new_zoom);\n      }\n    }\n\n    if (scale_clicked) {\n      const new_scale = last_scale\n            + (props.mouse_pos.x - scale_initial_point.x) / 100;\n      if (new_scale > min_scale) {\n        setScale(new_scale);\n        props.onScaleChange(scale);\n      }\n    }\n  }\n\n  function handleZoomMouseDown(event) {\n    setZoomClicked(true);\n    setZoomInitialPoint(props.mouse_pos);\n    setLastZoom(zoom);\n  }\n\n  function handleScaleMouseDown(event) {\n    setScaleClicked(true);\n    setScaleInitialPoint(props.mouse_pos);\n    setLastScale(scale);\n  }\n\n  React.useEffect(handleMousePosChange, [props.mouse_pos]);\n  React.useEffect(handleMouseUnclick, [props.mouse_clicked]);\n\n\n  // Actual component\n  return (\n    <div className={styles.Plot}>\n      <div className={styles.Buttons}>\n        <ClickDrag\n          onMouseDown={handleZoomMouseDown}\n          value={`Zoom: ${Number(zoom*100).toFixed(0)}%`}\n        />\n        <ClickDrag\n          onMouseDown={handleScaleMouseDown}\n          value={`Scale: ${Number(scale).toExponential(2)}`}\n        />\n      </div>\n      <div className={styles.Canvas}>\n        <Canvas\n          draw={(canvasRef) => renderCanvas(canvasRef, props.paths, zoom, props.line_props)}\n        />\n      </div>\n      <div className={styles.BackgroundCanvas}>\n        <Canvas\n          draw={(canvasRef) => {drawGrid(canvasRef, zoom, gridline_prop);}}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Plot;\n","import React from 'react';\n\nfunction FunctionInput({ onEnter, value }) {\n\n  function getInput(event) {\n    if (event.keyCode === 13) {\n      onEnter(event);\n    }\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onKeyDown={getInput}\n      />\n      <p>\n        {value}\n      </p>\n    </div>\n  );\n}\n\nexport default FunctionInput;\n","import React from 'react';\nimport FunctionInput from './FunctionInput';\n\nfunction Input2DFunction({ handleXTextboxEnter,\n                           handleYTextboxEnter,\n                           x_textbox_value,\n                           y_textbox_value }) {\n\n  return (\n    <div>\n      <FunctionInput\n        onEnter={handleXTextboxEnter}\n        value={x_textbox_value}\n      />\n      <FunctionInput\n        onEnter={handleYTextboxEnter}\n        value={y_textbox_value}\n      />\n    </div>\n  );\n}\n\nexport default Input2DFunction;\n","import React from 'react';\nimport { Provider, Node } from '@nteract/mathjax';\nimport { compile, parse } from 'mathjs';\n\nimport { returnCircle } from './MathFunctions';\n\nimport style from './App.module.css';\nimport Plot from './Plot';\nimport FunctionInput from './FunctionInput';\nimport Input2DFunction from './Input2DFunction';\n\nfunction App() {\n\n  const [plot_1_val, setPlot1Val] = React.useState(1);\n  const [plot_2_val, setPlot2Val] = React.useState(1);\n\n  // handle mouse events\n  const [mouse_pos, setMousePos] = React.useState({x: 0, y: 0});\n  const [mouse_clicked, setMouseClicked] = React.useState(false);\n  function handleMouseMove(event) {\n    setMousePos({x: event.pageX, y: event.pageY});\n  }\n  function handleMouseUp(event) {\n    setMouseClicked(false);\n  }\n  function handleMouseDown(event) {\n    setMouseClicked(true);\n  }\n\n  // handle textbox events\n  const [x_textbox_value, setXTextboxValue] = React.useState(0);\n  const [y_textbox_value, setYTextboxValue] = React.useState(0);\n  function handleXTextboxEnter(event) {\n    setXTextboxValue(event.target.value);\n  }\n  function handleYTextboxEnter(event) {\n    setYTextboxValue(event.target.value);\n  }\n  function getFuncExpression(x_expr, y_expr) {\n\n    const x_func = compile(x_expr);\n    const y_func = compile(y_expr);\n    const func = (pt) => {\n      return ({\n        x: x_func.evaluate(pt),\n        y: y_func.evaluate(pt)\n      });\n    };\n\n    return func;\n  }\n\n  const pts = returnCircle(plot_1_val);\n  const func_pts = pts.map(getFuncExpression(x_textbox_value, y_textbox_value));\n  const new_pts = returnCircle(plot_1_val*plot_2_val);\n  const line_props = [{strokeStyle: \"#0000FF\", lineWidth: 6},\n                      {strokeStyle: \"#FF0000\", lineWidth: 6}];\n\n  return (\n    <div\n      className={style.App}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseMove={handleMouseMove}\n    >\n      <Input2DFunction\n        handleXTextboxEnter={handleXTextboxEnter}\n        handleYTextboxEnter={handleYTextboxEnter}\n        x_textbox_value={<Node>{parse(x_textbox_value).toTex()}</Node>}\n        y_textbox_value={<Node>{parse(y_textbox_value).toTex()}</Node>}\n      />\n      <Plot\n        slider_value={plot_1_val}\n        onScaleChange={(scale) => setPlot1Val(scale)}\n        paths={[pts]}\n        line_props={line_props}\n        mouse_clicked={mouse_clicked}\n        mouse_pos={mouse_pos}\n      />\n      <Plot\n        slider_value={plot_2_val}\n        onScaleChange={(scale) => setPlot2Val(scale)}\n        paths={[func_pts, new_pts]}\n        line_props={line_props}\n        mouse_clicked={mouse_clicked}\n        mouse_pos={mouse_pos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}