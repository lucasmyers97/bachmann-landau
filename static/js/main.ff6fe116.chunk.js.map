{"version":3,"sources":["Plot.module.css","Canvas.module.css","App.module.css","ClickDrag.module.css","Canvas.jsx","ClickDrag.jsx","MathFunctions.js","Render.js","Plot.jsx","App.jsx","index.js"],"names":["module","exports","Plot","Buttons","Canvas","BackgroundCanvas","canvas","App","ClickDrag","props","canvasRef","React","useRef","useEffect","draw","react_default","a","createElement","className","styles","ref","width","height","style","onMouseDown","event","handleMouseDown","value","transformFunc","pt","t","Math","atan2","y","x","r0","sqrt","r","cos","sin","linspace","start","end","num","empty_array","Array","fill","dx","map","_","idx","returnCircle","PI","drawPath","path","zoom","line_prop","canvas_path","ctx","current","getContext","canvas_width","canvas_height","canvas_dim","min","point","dim","pointToCanvasPoint","pathToCanvasPath","zoomPath","line_props","beginPath","forEach","lineTo","_i","_Object$entries","Object","entries","length","_ref3","_ref2","slicedToArray","key","stroke","closePath","drawCanvasPath","renderCanvas","paths","clearRect","clearScreen","i","min_zoom","min_scale","drawGrid","grid_paths","grid_spacing","n_lines","ceil","unscaled_lines","line_scale","scaled_lines","line","x_paths","x_val","y_paths","y_val","concat","createGridlinePaths","num_paths","strokeStyle","lineWidth","_React$useState","useState","_React$useState2","last_zoom","setLastZoom","_React$useState3","_React$useState4","setZoom","_React$useState5","_React$useState6","zoom_clicked","setZoomClicked","_React$useState7","_React$useState8","zoom_initial_point","setZoomInitialPoint","_React$useState9","_React$useState10","last_scale","setLastScale","_React$useState11","_React$useState12","scale","setScale","_React$useState13","_React$useState14","scale_clicked","setScaleClicked","_React$useState15","_React$useState16","scale_initial_point","setScaleInitialPoint","new_zoom","mouse_pos","new_scale","onScaleChange","mouse_clicked","src_ClickDrag","Number","toFixed","toExponential","src_Canvas","plot_1_val","setPlot1Val","plot_2_val","setPlot2Val","setMousePos","setMouseClicked","pts","func_pts","new_pts","onMouseUp","onMouseMove","pageX","pageY","src_Plot","slider_value","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ff6fe116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Plot\":\"Plot_Plot__1KTAS\",\"Buttons\":\"Plot_Buttons__KMdqr\",\"Canvas\":\"Plot_Canvas__3R-0c\",\"BackgroundCanvas\":\"Plot_BackgroundCanvas__1_t0V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1vaUu\",\"Canvas\":\"Canvas_Canvas__33MS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__22zXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClickDrag\":\"ClickDrag_ClickDrag__1_Q3u\"};","import React from 'react';\nimport styles from './Canvas.module.css';\n\nfunction Canvas(props) {\n\n  const canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    props.draw(canvasRef);\n  }, [props.draw]);\n\n  return (\n    <div className={styles.Canvas}>\n      <canvas\n        ref={canvasRef}\n        width=\"1000\"\n        height=\"1000\"\n        className={styles.canvas}\n      />\n    </div>\n  );\n}\n\nexport default Canvas\n","import React from 'react';\nimport style from './ClickDrag.module.css';\n\nfunction ClickDrag(props) {\n\n  function handleMouseDown(event) {\n    props.onMouseDown(event)\n  }\n\n  return (\n    <div\n      className={style.ClickDrag}\n      onMouseDown={(event) => handleMouseDown(event)}\n    >\n        {props.value}\n    </div>\n  );\n}\n\nexport default ClickDrag;\n","\nexport function drawCircle(canvasRef, radius) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#FF00FF';\n  ctx.arc(ctr_x, ctr_y, radius, 0, 2*Math.PI);\n  ctx.stroke();\n}\n\n\n\nexport function drawCurve(canvasRef, pts) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  pts.forEach((pt) => {\n    ctx.lineTo(pt.x + ctr_x, pt.y + ctr_y);\n  });\n\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#0000FF';\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nexport function transformFunc(pt) {\n  let t = Math.atan2(pt.y, pt.x);\n  const r0 = Math.sqrt(pt.x*pt.x + pt.y*pt.y);\n  const r = 0.1*r0*Math.cos(10*t) + r0;\n  t += 2*r0;\n  return ({\n    x : r*Math.cos(t),\n    y : r*Math.sin(t)\n  });\n}\n\n\n\nexport function linspace(start, end, num) {\n  const empty_array = Array(num).fill(null);\n  const dx = (end - start) / (num - 1);\n  return empty_array.map( (_, idx) => {\n    return start + dx*idx;\n  });\n}\n\n\n\nexport function returnCircle(r) {\n  const t = linspace(0, 2*Math.PI, 200);\n\n  return t.map((t) => {\n    return ({ x: r*Math.cos(t),\n              y: r*Math.sin(t) });\n  });\n}\n","import { linspace } from './MathFunctions.js';\n\nfunction clearScreen(canvasRef) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  ctx.clearRect(0, 0, width, height);\n  ctx.beginPath();\n  ctx.closePath();\n}\n\n\n\nfunction zoomPath(path, zoom) {\n  return ( path.map((pt) => {\n    return ({ x : pt.x * zoom,\n              y : pt.y * zoom });\n  }));\n}\n\n\n\nfunction pointToCanvasPoint(point, dim, width, height) {\n\n  return ({\n    x : -(point.y * dim / 2) + (width / 2),\n    y : (point.x * dim / 2) + (height / 2)\n  });\n}\n\n\n\nfunction pathToCanvasPath(canvasRef, path) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  const canvas_width = ctx.canvas.width;\n  const canvas_height = ctx.canvas.height;\n  const canvas_dim = Math.min(canvas_width, canvas_height);\n\n  const canvas_path = path.map((point) => {\n    return ( pointToCanvasPoint(point,\n                                canvas_dim,\n                                canvas_width,\n                                canvas_height) );\n  });\n\n  return canvas_path;\n}\n\n\n\nfunction drawCanvasPath(canvasRef, canvas_path, line_props) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  ctx.beginPath();\n  canvas_path.forEach((pt) => {\n    ctx.lineTo(pt.x, pt.y);\n  });\n\n  for (let [key, value] of Object.entries(line_props)) {\n    ctx[key] = value;\n  }\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nfunction drawPath(canvasRef, path, zoom, line_prop) {\n\n  const zoomed_path = zoomPath(path, zoom);\n  const canvas_path = pathToCanvasPath(canvasRef, zoomed_path);\n  drawCanvasPath(canvasRef, canvas_path, line_prop);\n}\n\n\n\nexport function renderCanvas(canvasRef, paths, zoom, line_props) {\n\n  clearScreen(canvasRef);\n  paths.forEach((path, i) => { drawPath(canvasRef, path, zoom, line_props[i]); });\n}\n\n\n\nexport function createGridlinePaths(canvasRef, grid_spacing, zoom) {\n\n  let n_lines = Math.ceil(1 / (zoom * grid_spacing));\n  n_lines = n_lines % 2 === 0 ? n_lines : (n_lines + 1);\n  n_lines = n_lines * 2;\n  const unscaled_lines = linspace(-n_lines/2, n_lines/2, n_lines);\n  const line_scale = grid_spacing;\n  const scaled_lines = unscaled_lines.map((line) => line*line_scale);\n\n  const end = scaled_lines.length - 1;\n  const x_paths = scaled_lines.map((x_val) => {\n    return [{x: x_val, y: scaled_lines[0]}, {x: x_val, y: scaled_lines[end]}];\n  });\n  const y_paths = scaled_lines.map((y_val) => {\n    return [{x: scaled_lines[0], y: y_val}, {x: scaled_lines[end], y: y_val}];\n  });\n\n  return x_paths.concat(y_paths);\n}\n","import React from 'react';\nimport styles from './Plot.module.css';\nimport Canvas from './Canvas';\nimport ClickDrag from './ClickDrag';\nimport { renderCanvas, createGridlinePaths } from './Render';\n\nfunction Plot(props) {\n\n  const min_zoom = 0.01;\n  const min_scale = 0;\n\n  function drawGrid(canvasRef, zoom) {\n    const grid_paths = createGridlinePaths(canvasRef, 0.2, zoom);\n    const num_paths = grid_paths.length;\n    let line_props = Array(num_paths);\n    line_props.fill( [{strokeStyle: \"#000000\", lineWidth: 3}] );\n    renderCanvas(canvasRef, grid_paths, zoom, line_props);\n  }\n\n  const [last_zoom, setLastZoom] = React.useState(1);\n  const [zoom, setZoom] = React.useState(1);\n  const [zoom_clicked, setZoomClicked] = React.useState(false);\n  const [zoom_initial_point, setZoomInitialPoint] = React.useState({x: 0, y: 0});\n\n  const [last_scale, setLastScale] = React.useState(1);\n  const [scale, setScale] = React.useState(1);\n  const [scale_clicked, setScaleClicked] = React.useState(false);\n  const [scale_initial_point, setScaleInitialPoint] = React.useState({x: 0, y: 0});\n\n  function handleMouseUnclick() {\n    if (props.mouse_clicked) {\n      return;\n    }\n    setZoomClicked(false);\n    setScaleClicked(false);\n  }\n\n  function handleMousePosChange() {\n\n    if (zoom_clicked) {\n      const new_zoom = last_zoom\n            + (props.mouse_pos.x - zoom_initial_point.x) / 100;\n      if (new_zoom > min_zoom) {\n        setZoom(new_zoom);\n      }\n    }\n\n    if (scale_clicked) {\n      const new_scale = last_scale\n            + (props.mouse_pos.x - scale_initial_point.x) / 100;\n      if (new_scale > min_scale) {\n        setScale(new_scale);\n        props.onScaleChange(scale);\n      }\n    }\n  }\n\n  function handleZoomMouseDown(event) {\n    setZoomClicked(true);\n    setZoomInitialPoint(props.mouse_pos);\n    setLastZoom(zoom);\n  }\n\n  function handleScaleMouseDown(event) {\n    setScaleClicked(true);\n    setScaleInitialPoint(props.mouse_pos);\n    setLastScale(scale);\n  }\n\n  React.useEffect(handleMousePosChange, [props.mouse_pos]);\n  React.useEffect(handleMouseUnclick, [props.mouse_clicked]);\n\n  return (\n    <div className={styles.Plot}>\n      <div className={styles.Buttons}>\n        <ClickDrag\n          onMouseDown={handleZoomMouseDown}\n          value={`Zoom: ${Number(zoom*100).toFixed(0)}%`}\n        />\n        <ClickDrag\n          onMouseDown={handleScaleMouseDown}\n          value={`Scale: ${Number(scale).toExponential(2)}`}\n        />\n      </div>\n      <div className={styles.Canvas}>\n        <Canvas\n          draw={(canvasRef) => renderCanvas(canvasRef, props.paths, zoom, props.line_props)}\n        />\n      </div>\n      <div className={styles.BackgroundCanvas}>\n        <Canvas\n          draw={(canvasRef) => {drawGrid(canvasRef, zoom);}}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Plot;\n","import React from 'react';\nimport style from './App.module.css';\nimport Plot from './Plot';\nimport ClickDrag from './ClickDrag';\nimport { returnCircle, transformFunc } from './MathFunctions';\n\nfunction App() {\n\n  const [plot_1_val, setPlot1Val] = React.useState(0.5);\n  const [plot_2_val, setPlot2Val] = React.useState(0.5);\n\n  // handle mouse events\n  const [mouse_pos, setMousePos] = React.useState({x: 0, y: 0});\n  const [mouse_clicked, setMouseClicked] = React.useState(false);\n  function handleMouseMove(event) {\n    setMousePos({x: event.pageX, y: event.pageY});\n  }\n  function handleMouseUp(event) {\n    setMouseClicked(false);\n  }\n  function handleMouseDown(event) {\n    setMouseClicked(true);\n  }\n\n  const pts = returnCircle(plot_1_val);\n  const func_pts = pts.map(transformFunc);\n  const new_pts = returnCircle(plot_1_val*plot_2_val);\n  const line_props = [{strokeStyle: \"#0000FF\", lineWidth: 6},\n                      {strokeStyle: \"#FF0000\", lineWidth: 6}];\n\n  return (\n    <div\n      className={style.App}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseMove={handleMouseMove}\n    >\n      <Plot\n        slider_value={plot_1_val}\n        onScaleChange={(scale) => setPlot1Val(scale)}\n        paths={[pts]}\n        line_props={line_props}\n        mouse_clicked={mouse_clicked}\n        mouse_pos={mouse_pos}\n      />\n      <Plot\n        slider_value={plot_2_val}\n        onScaleChange={(scale) => setPlot2Val(scale)}\n        paths={[func_pts, new_pts]}\n        line_props={line_props}\n        mouse_clicked={mouse_clicked}\n        mouse_pos={mouse_pos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}