{"version":3,"sources":["Canvas.jsx","Plot.jsx","MathFunctions.js","App.jsx","index.js"],"names":["Canvas","props","canvasRef","React","useRef","useEffect","draw","react_default","a","createElement","ref","Plot","className","slider_value","src_Canvas","type","min","max","onInput","onSliderChange","clearScreen","ctx","current","getContext","width","canvas","height","clearRect","beginPath","drawCircle","radius","ctr_x","ctr_y","lineWidth","strokeStyle","arc","Math","PI","stroke","transformFunc","pt","t","atan2","y","x","r0","sqrt","r","cos","sin","returnCircle","start","end","num","empty_array","Array","fill","dx","map","_","idx","linspace","App","_React$useState","useState","_React$useState2","Object","slicedToArray","plot_1_val","setPlot1Val","_React$useState3","_React$useState4","plot_2_val","setPlot2Val","func_pts","src_Plot","e","target","value","pts","forEach","lineTo","closePath","drawCurve","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c6aceba6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Canvas(props) {\n\n  const canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    props.draw(canvasRef);\n  });\n\n  return (\n    <canvas\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default Canvas\n","import React from 'react';\nimport Canvas from './Canvas';\n\nfunction Plot(props) {\n\n  return (\n    <div className=\"Plot\">\n      <h1>\n        {props.slider_value}\n      </h1>\n      <Canvas\n        draw={props.draw}\n      />\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        onInput={props.onSliderChange}\n      />\n    </div>\n  );\n}\n\n\nexport default Plot;\n","export function clearScreen(canvasRef) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  ctx.clearRect(0, 0, width, height);\n  ctx.beginPath();\n}\n\nexport function drawCircle(canvasRef, radius) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#FF00FF';\n  ctx.arc(ctr_x, ctr_y, radius, 0, 2*Math.PI);\n  ctx.stroke();\n}\n\nexport function drawCurve(canvasRef, pts) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  pts.forEach((pt) => {\n    ctx.lineTo(pt.x + ctr_x, pt.y + ctr_y);\n  });\n\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#0000FF';\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport function transformFunc(pt) {\n  let t = Math.atan2(pt.y, pt.x);\n  const r0 = Math.sqrt(pt.x*pt.x + pt.y*pt.y);\n  const r = 0.1*r0*Math.cos(10*t) + r0;\n  t += 0.1*r0;\n  return ({\n    x : r*Math.cos(t),\n    y : r*Math.sin(t)\n  });\n}\n\nfunction linspace(start, end, num) {\n  const empty_array = Array(num).fill(null);\n  const dx = (end - start) / (num - 1);\n  return empty_array.map( (_, idx) => {\n    return start + dx*idx;\n  });\n}\n\nexport function returnCircle(r) {\n  const t = linspace(0, 2*Math.PI, 200);\n\n  return t.map((t) => {\n    return ({ x: r*Math.cos(t),\n              y: r*Math.sin(t) });\n  });\n}\n","import React from 'react';\nimport Plot from './Plot';\nimport { clearScreen, returnCircle, transformFunc, drawCurve, drawCircle } from './MathFunctions';\n\n\nfunction App() {\n\n  const [plot_1_val, setPlot1Val] = React.useState(50);\n  const [plot_2_val, setPlot2Val] = React.useState(50);\n\n  const pts = returnCircle(plot_1_val);\n  const func_pts = pts.map(transformFunc);\n\n  return (\n    <div className=\"App\">\n      <Plot\n        slider_value={plot_1_val}\n        onSliderChange={(e) => setPlot1Val(e.target.value)}\n        draw={(canvasRef) => {\n          clearScreen(canvasRef);\n          drawCircle(canvasRef, plot_1_val);}\n             }\n      />\n      <Plot\n        slider_value={plot_2_val}\n        onSliderChange={(e) => setPlot2Val(e.target.value)}\n        draw={(canvasRef) => {\n          clearScreen(canvasRef);\n          drawCurve(canvasRef, func_pts);\n          drawCircle(canvasRef, plot_1_val*plot_2_val);}\n             }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}