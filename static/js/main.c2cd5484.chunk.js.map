{"version":3,"sources":["Plot.module.css","Canvas.module.css","App.module.css","Canvas.jsx","MathFunctions.js","Render.js","Plot.jsx","App.jsx","index.js"],"names":["module","exports","Plot","Canvas","BackgroundCanvas","ZoomSlider","ZoomLabel","NormSlider","NormLabel","canvas","App","props","canvasRef","React","useRef","useEffect","draw","react_default","a","createElement","className","styles","ref","width","height","transformFunc","pt","t","Math","atan2","y","x","r0","sqrt","r","cos","sin","linspace","start","end","num","empty_array","Array","fill","dx","map","_","idx","returnCircle","PI","drawPath","path","zoom","canvas_path","ctx","current","getContext","canvas_width","canvas_height","canvas_dim","min","point","dim","pointToCanvasPoint","pathToCanvasPath","zoomPath","beginPath","forEach","lineTo","lineWidth","strokeStyle","stroke","closePath","drawCanvasPath","renderCanvas","paths","clearRect","clearScreen","drawGrid","style","background","grid_paths","grid_spacing","n_lines","ceil","unscaled_lines","line_scale","scaled_lines","line","length","x_paths","x_val","y_paths","y_val","concat","createGridlinePaths","console","log","_React$useState","useState","_React$useState2","Object","slicedToArray","setZoom","htmlFor","Number","toFixed","id","type","max","step","onInput","event","target","value","slider_value","toExponential","onSliderChange","src_Canvas","plot_1_val","setPlot1Val","_React$useState3","_React$useState4","plot_2_val","setPlot2Val","pts","func_pts","new_pts","src_Plot","e","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c2cd5484.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Plot\":\"Plot_Plot__1KTAS\",\"Canvas\":\"Plot_Canvas__3R-0c\",\"BackgroundCanvas\":\"Plot_BackgroundCanvas__1_t0V\",\"ZoomSlider\":\"Plot_ZoomSlider__2juVM\",\"ZoomLabel\":\"Plot_ZoomLabel__Rk1c4\",\"NormSlider\":\"Plot_NormSlider__Jfvhb\",\"NormLabel\":\"Plot_NormLabel__1gbqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1vaUu\",\"Canvas\":\"Canvas_Canvas__33MS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__22zXa\"};","import React from 'react';\nimport styles from './Canvas.module.css';\n\nfunction Canvas(props) {\n\n  const canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    props.draw(canvasRef);\n  });\n\n  return (\n    <div className={styles.Canvas}>\n      <canvas\n        ref={canvasRef}\n        width=\"1000\"\n        height=\"1000\"\n        className={styles.canvas}\n      />\n    </div>\n  );\n}\n\nexport default Canvas\n","\nexport function drawCircle(canvasRef, radius) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#FF00FF';\n  ctx.arc(ctr_x, ctr_y, radius, 0, 2*Math.PI);\n  ctx.stroke();\n}\n\n\n\nexport function drawCurve(canvasRef, pts) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  const ctr_x = width / 2;\n  const ctr_y = height / 2;\n\n  ctx.beginPath();\n  pts.forEach((pt) => {\n    ctx.lineTo(pt.x + ctr_x, pt.y + ctr_y);\n  });\n\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#0000FF';\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nexport function transformFunc(pt) {\n  let t = Math.atan2(pt.y, pt.x);\n  const r0 = Math.sqrt(pt.x*pt.x + pt.y*pt.y);\n  const r = 0.1*r0*Math.cos(10*t) + r0;\n  t += 2*r0;\n  return ({\n    x : r*Math.cos(t),\n    y : r*Math.sin(t)\n  });\n}\n\n\n\nexport function linspace(start, end, num) {\n  const empty_array = Array(num).fill(null);\n  const dx = (end - start) / (num - 1);\n  return empty_array.map( (_, idx) => {\n    return start + dx*idx;\n  });\n}\n\n\n\nexport function returnCircle(r) {\n  const t = linspace(0, 2*Math.PI, 200);\n\n  return t.map((t) => {\n    return ({ x: r*Math.cos(t),\n              y: r*Math.sin(t) });\n  });\n}\n","import { linspace } from './MathFunctions.js';\n\nfunction clearScreen(canvasRef) {\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n  ctx.clearRect(0, 0, width, height);\n  ctx.beginPath();\n  ctx.closePath();\n}\n\n\n\nfunction zoomPath(path, zoom) {\n  return ( path.map((pt) => {\n    return ({ x : pt.x * zoom,\n              y : pt.y * zoom });\n  }));\n}\n\n\n\nfunction pointToCanvasPoint(point, dim, width, height) {\n\n  return ({\n    x : -(point.y * dim / 2) + (width / 2),\n    y : (point.x * dim / 2) + (height / 2)\n  });\n}\n\n\n\nfunction pathToCanvasPath(canvasRef, path) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  const canvas_width = ctx.canvas.width;\n  const canvas_height = ctx.canvas.height;\n  const canvas_dim = Math.min(canvas_width, canvas_height);\n\n  const canvas_path = path.map((point) => {\n    return ( pointToCanvasPoint(point,\n                                canvas_dim,\n                                canvas_width,\n                                canvas_height) );\n  });\n  \n  return canvas_path;\n}\n\n\n\nfunction drawCanvasPath(canvasRef, canvas_path) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n  ctx.beginPath();\n  canvas_path.forEach((pt) => {\n    ctx.lineTo(pt.x, pt.y);\n  });\n\n  ctx.lineWidth = 6;\n  ctx.strokeStyle = '#0000FF';\n  ctx.stroke();\n  ctx.closePath();\n}\n\n\n\nfunction drawPath(canvasRef, path, zoom) {\n\n  const zoomed_path = zoomPath(path, zoom);\n  const canvas_path = pathToCanvasPath(canvasRef, zoomed_path);\n  drawCanvasPath(canvasRef, canvas_path);\n}\n\n\n\nexport function renderCanvas(canvasRef, paths, zoom) {\n\n  clearScreen(canvasRef);\n  paths.forEach((path) => { drawPath(canvasRef, path, zoom); });\n}\n\n\n\nexport function createGridlinePaths(canvasRef, grid_spacing, zoom) {\n\n  const ctx = canvasRef.current.getContext(\"2d\");\n\n  let n_lines = Math.ceil(1 / (zoom * grid_spacing));\n  n_lines = n_lines % 2 == 0 ? n_lines : (n_lines + 1);\n  n_lines = n_lines * 2;\n  const unscaled_lines = linspace(-n_lines/2, n_lines/2, n_lines);\n  const line_scale = grid_spacing;\n  const scaled_lines = unscaled_lines.map((line) => line*line_scale);\n\n  const end = scaled_lines.length - 1;\n  const x_paths = scaled_lines.map((x_val) => {\n    return [{x: x_val, y: scaled_lines[0]}, {x: x_val, y: scaled_lines[end]}];\n  });\n  const y_paths = scaled_lines.map((y_val) => {\n    return [{x: scaled_lines[0], y: y_val}, {x: scaled_lines[end], y: y_val}];\n  });\n\n  return x_paths.concat(y_paths);\n}\n","import React from 'react';\nimport styles from './Plot.module.css';\nimport Canvas from './Canvas';\nimport { renderCanvas, createGridlinePaths } from './Render';\n\nfunction Plot(props) {\n\n  function drawGrid(canvasRef, zoom) {\n    canvasRef.current.style.background = \"white\";\n    const grid_paths = createGridlinePaths(canvasRef, 0.2, zoom);\n    console.log(grid_paths);\n    renderCanvas(canvasRef, grid_paths, zoom);\n  }\n\n  const [zoom, setZoom] = React.useState(1);\n\n  return (\n    <div className={styles.Plot}>\n      <label\n        className={styles.ZoomLabel}\n        htmlFor=\"zoomInput\"\n      >\n        {Number(zoom*100).toFixed(0)}%\n      </label>\n      <input\n        id=\"zoomInput\"\n        className={styles.ZoomSlider}\n        type=\"range\"\n        min=\"0.1\"\n        max=\"2\"\n        step=\"0.01\"\n        onInput={(event) => setZoom(event.target.value)}\n      />\n      <label\n        className={styles.NormLabel}\n        htmlFor=\"circleSize\">\n        {Number(props.slider_value*100).toExponential(2)}\n      </label>\n      <input\n        id=\"circleSize\"\n        className={styles.NormSlider}\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        onInput={props.onSliderChange}\n      />\n      <div className={styles.Canvas}>\n        <Canvas\n          draw={(canvasRef) => renderCanvas(canvasRef, props.paths, zoom)}\n        />\n      </div>\n      <div className={styles.BackgroundCanvas}>\n        <Canvas\n          draw={(canvasRef) => {drawGrid(canvasRef, zoom);}}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Plot;\n","import React from 'react';\nimport style from './App.module.css';\nimport Plot from './Plot';\nimport { returnCircle, transformFunc } from './MathFunctions';\n\nfunction App() {\n\n  const [plot_1_val, setPlot1Val] = React.useState(0.5);\n  const [plot_2_val, setPlot2Val] = React.useState(0.5);\n\n  const pts = returnCircle(plot_1_val);\n  const func_pts = pts.map(transformFunc);\n  const new_pts = returnCircle(plot_1_val*plot_2_val);\n\n  return (\n    <div className={style.App}>\n      <Plot\n        slider_value={plot_1_val}\n        onSliderChange={(e) => setPlot1Val(e.target.value)}\n        paths={[pts]}\n      />\n      <Plot\n        slider_value={plot_2_val}\n        onSliderChange={(e) => setPlot2Val(e.target.value)}\n        paths={[func_pts, new_pts]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}